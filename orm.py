from sqlalchemy import select

from database import get_db_session
from orm_models import User

session = get_db_session()

# В предыдущем разделе мы представили UPDATE конструкцию, которая представляет собой оператор SQL UPDATE.
# При использовании ORM есть два способа использования этой конструкции. Основной способ заключается в том,
# что она автоматически выдается как часть процесса Unit of Work, используемой Session, где оператор UPDATE выдается
# на основе первичного ключа, соответствующего отдельным объектам, в которых произошли изменения.

# Предположим, что мы загрузили User объект для имени пользователя sandy в транзакцию
# (также демонстрируя Select.filter_by() метод и сам Result.scalar_one() метод):

sandy = session.execute(select(User).filter_by(name="sandy")).scalar_one()
print("-" * 60)
# Объект Python sandy, как упоминалось ранее, действует как прокси для строки в базе данных, а точнее, строки
# базы данных с точки зрения текущей транзакции , которая имеет первичный ключевой идентификатор 2:

print(sandy)

# Если мы изменим атрибуты этого объекта Session, отслеживается это изменение:

sandy.fullname = "Sandy Squirrel"

# Объект появляется в коллекции с именем Session.dirty, что указывает на то, что объект «грязный»:

print(sandy in session.dirty)

# Когда Session инициирует Flash, будет выдан UPDATE, который обновит это значение в базе данных.
# Как упоминалось ранее, Flash происходит автоматически перед тем, как мы выдадим любой SELECT, используя поведение,
# известное как autoflush. Мы можем напрямую запросить столбец User.fullname из этой строки и получим обратно
# наше обновленное значение:

print("-" * 60)
sandy_fullname = session.execute(select(User.fullname).where(User.id == 2)).scalar_one()
print(sandy_fullname)

print("-" * 60)
# Мы видим выше, что мы запросили выполнение Session одного select() оператора. Однако выданный SQL показывает,
# что также был выдан UPDATE, который был процессом очистки, выталкивающим ожидающие изменения.
# sandy Объект Python теперь больше не считается грязным:

print(sandy in session.dirty)

# Однако обратите внимание, что мы все еще находимся в транзакции, и наши изменения не были отправлены в постоянное
# хранилище базы данных. Поскольку фамилия Sandy’s на самом деле «Cheeks», а не «Squirrel», мы исправим эту ошибку
# позже, когда откатим транзакцию. Но сначала мы внесем еще несколько изменений в данные.


