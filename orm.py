from database import get_db_session
from orm_models import User

squidward = User(name="squidward", fullname="Squidward Tentacles")
krabs = User(name="ehkrabs", fullname="Eugene H. Krabs")
session = get_db_session()
session.add(squidward)
session.add(krabs)
session.flush()
print("-" * 60)

# Гораздо больше можно сказать о том, как Session работает, что будет обсуждаться далее. Сейчас мы зафиксируем
# транзакцию, чтобы накопить знания о том, как SELECT строки, прежде чем изучать больше поведения и функций ORM:

session.commit()

# Вышеуказанная операция зафиксирует транзакцию, которая была в процессе выполнения. Объекты, с которыми мы имели дело,
# все еще прикреплены к Session, что является состоянием, в котором они остаются до тех пор, пока Session не будет
# закрыта.

# ! Важно отметить, что атрибуты объектов, с которыми мы только что работали, были просрочены, то есть, когда мы
# в следующий раз получим доступ к любым их атрибутам, Session начнется новая транзакция и перезагрузится их состояние.
# Иногда этот вариант проблематичен как по причинам производительности, так и если кто-то захочет использовать
# объекты после закрытия Session (что известно как отсоединенное состояние), поскольку у них не будет никакого
# состояния и не будет Session возможности загрузить это состояние, что приведет к ошибкам «отсоединенного экземпляра».
# Поведением можно управлять с помощью параметра, называемого Session.expire_on_commit.
